#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
#Define_Constant MAXIo 16
#DEFine_ConsTANT SOME 3
#DEFINE_CONSTANT SOme_mORE 10
#DEFINE_CONSTANT TESTSTRING "testing"
#OUTPUT_SHIFT 5

#HELP_BEGIN 
This is help information.
#HELP_END


// #USER_SIMPLSHARP_LIBRARY "LibraryName"


DIGITAL_INPUT 
_skip_,_skip_,do_something,
do_something_else,_skip_,
many_things[MAXIO];
DIGITAL_INPUT _skip_,
many_more_things[SOME_MORE];
DIGITAL_INPUT testing_again[MAXIO];

ANALOG_INPUT testAIn[6];
ANALOG_INPUT _skip_, moreAIn[SOME_MORE], _skip_;

STRING_INPUT 
test[6][255];

// DIGITAL_OUTPUT
// DI[MAXIO]; 
ANALOG_OUTPUT 
output[10];
//STRING_OUTPUT 



integer_function fnSomeFunction(integer x) {
    string a[100];
    a = "this is a test string";
    a = "\"" + "abdf" + itoa(123) + "dfj\";lj//adflkj{%s}" + TESTSTRING;
    a = "{" + "}";
    return(1);
}


callback function fnCallbackFunc () {
    integer a;
    fnSomeFunction(1);
    a = fnSomeFunction(1);
}

integer_parameter size;
 string_parameter name[SOME][255];
// integer_parameter _skip_, newNumber;


PUSH do_something
{
    string abcd[100];
    integer a;
    integer variableName;
    abcd = "dfljdlkjf";

    
    for(variableName = 10 to 11)
    {
       //code here
    }
    a = MAXIO;
    a = fnSomeFunction(1234);

}





/*******************************************************************************************
Main()
Uncomment and place one-time startup code here
(This code will get called when the system starts up)
*******************************************************************************************/

Function Main()
{
    // TODO:  Add code here
    // Initialize declared global and local variables/arrays as needed.

    // WaitForInitializationComplete();
    // If you are reading any Input or Output variables, uncomment
    //   the WaitForInitializationComplete statement above and read
    //   them afterwards.  Input/Output variables will not have
    //   their correct values set until after the logic processor
    //   runs and propagates the values to them.
}
